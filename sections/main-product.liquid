<product-info
  id="MainProduct-{{ section.id }}"
  class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}"
  data-section="{{ section.id }}"
  data-product-id="{{ product.id }}"
  data-update-url="true"
  data-url="{{ product.url }}"
  {% if section.settings.image_zoom == 'hover' %}
    data-zoom-on-hover
  {% endif %}
>
  {{ 'section-main-product.css' | asset_url | stylesheet_tag }}
  {{ 'component-accordion.css' | asset_url | stylesheet_tag }}
  {{ 'component-price.css' | asset_url | stylesheet_tag }}
  {{ 'component-slider.css' | asset_url | stylesheet_tag }}
  {{ 'component-rating.css' | asset_url | stylesheet_tag }}
  {{ 'component-deferred-media.css' | asset_url | stylesheet_tag }}
  
  {{ 'product-thumbnail-gallery.css' | asset_url | stylesheet_tag }}

  {%- comment -%} Ultra-aggressive inline fix for main image whitespace issue {%- endcomment -%}
  <style>
    /* Fix .product-page container that's limiting width */
    .product__media-wrapper .product-page {
      max-width: none !important;
      width: 100% !important;
      display: block !important;
      grid-template-columns: 1fr !important;
    }
    
    /* Fix media wrapper */
    .product__media-wrapper {
      max-width: none !important;
      width: 100% !important;
    }
    
    /* Ultra-specific selectors to force main image area to use full width */
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery {
      display: grid !important;
      grid-template-columns: 75px 1fr !important;
      gap: 1rem !important;
      max-width: none !important;
      width: 100% !important;
    }
    
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery__main {
      max-width: none !important;
      width: calc(100% - 75px - 1rem) !important;
      min-width: calc(100% - 75px - 1rem) !important;
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
      padding: 0 !important;
      margin: 0 !important;
      flex-basis: calc(100% - 75px - 1rem) !important;
      flex-grow: 0 !important;
      flex-shrink: 0 !important;
      display: block !important;
      /* Remove any background/border that creates fixed dimensions */
      background: none !important;
      border: none !important;
    }
    
    /* Override all fixed heights from CSS file with ultra-high specificity */
    .product-page {
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
    }
    
    /* Nuclear option: Force main container height with aspect ratio */
    .product-gallery__main {
      height: fit-content !important;
      min-height: fit-content !important;
      max-height: fit-content !important;
      aspect-ratio: 1 / 1 !important;
      width: 100% !important;
      max-width: 700px !important;
    }
    
    .product-gallery__main-inner {
      height: 100% !important;
      min-height: 0 !important;
      max-height: 100% !important;
      aspect-ratio: inherit !important;
    }
    
    /* Force image to fill container completely */
    .product-gallery__image {
      width: 100% !important;
      height: 100% !important;
      object-fit: cover !important;
      aspect-ratio: 1 / 1 !important;
    }
    
    .product-gallery__main {
      height: auto !important;
      min-height: 0 !important; 
      max-height: none !important;
      background: none !important;
      border: none !important;
    }
    
    html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main {
      height: auto !important;
      min-height: 0 !important; 
      max-height: none !important;
      background: none !important;
      border: none !important;
    }
    
    .product-gallery__main-inner {
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
      background: none !important;
      border: none !important;
    }
    
    html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main-inner {
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
      background: none !important;
      border: none !important;
      border-radius: 0 !important;
      overflow: visible !important;
      display: block !important;
      align-items: stretch !important;
      justify-content: stretch !important;
    }
    
    /* Override position absolute for main-image */
    html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main-image {
      position: static !important;
      top: auto !important;
      left: auto !important;
      width: 100% !important;
      height: auto !important;
      opacity: 1 !important;
      visibility: visible !important;
      display: block !important;
    }
    
    html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main-image.active {
      position: static !important;
      top: auto !important;
      left: auto !important;
      width: 100% !important;
      height: auto !important;
      opacity: 1 !important;
      visibility: visible !important;
      display: block !important;
    }
    
    /* Force all gallery containers to auto height */
    .product-gallery__main,
    .product__media-wrapper .product-gallery__main,
    body .product-gallery__main,
    html body .product-gallery__main {
      height: auto !important;
      min-height: auto !important; 
      max-height: none !important;
    }
    
    .product-gallery__main-inner,
    .product__media-wrapper .product-gallery__main-inner,
    body .product-gallery__main-inner,
    html body .product-gallery__main-inner {
      height: auto !important;
      min-height: auto !important;
      max-height: none !important;
    }
    
    /* Override media queries */
    @media (min-width: 1025px) {
      html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main {
        height: auto !important;
        min-height: auto !important;
        max-height: none !important;
      }
      html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main-inner {
        height: auto !important;
        max-height: none !important;
      }
      html body div.page-width div.product.grid div.product__media-wrapper div.product-gallery div.product-gallery__main-image.active {
        max-height: none !important;
        height: auto !important;
      }
      .product-gallery__main,
      .product__media-wrapper .product-gallery__main,
      body .product-gallery__main {
        height: auto !important;
        min-height: auto !important;
        max-height: none !important;
      }
      .product-gallery__main-inner,
      .product__media-wrapper .product-gallery__main-inner,
      body .product-gallery__main-inner {
        height: auto !important;
        max-height: none !important;
      }
    }
    
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery__main-inner {
      max-width: none !important;
      width: 100% !important;
      min-width: 0 !important;
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
      display: block !important;
      position: relative !important;
      /* Remove fixed dimensions */
      background: none !important;
      border: none !important;
      border-radius: 0 !important;
      overflow: visible !important;
      /* Make container fit content */
      align-items: stretch !important;
      justify-content: stretch !important;
    }
    
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery__main-image,
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery__main-image.active {
      max-width: none !important;
      width: 100% !important;
      height: auto !important;
      min-height: 0 !important;
      max-height: none !important;
      /* Remove absolute positioning to allow natural flow */
      position: static !important;
      top: auto !important;
      left: auto !important;
      display: block !important;
      /* Make sure visible */
      opacity: 1 !important;
      visibility: visible !important;
    }
    
    html body div.page-width div.product.grid.grid--2-col-tablet div.grid__item.product__media-wrapper .product-gallery__image {
      max-width: none !important;
      width: 100% !important;
      height: auto !important;
      object-fit: cover !important;
      object-position: center !important;
      display: block !important;
    }
    
    /* Fallback with shorter selectors */
    div.product__media-wrapper div.product-gallery {
      display: grid !important;
      grid-template-columns: 75px 1fr !important;
      gap: 1rem !important;
      max-width: none !important;
      width: 100% !important;
    }
    
    div.product__media-wrapper div.product-gallery__main {
      max-width: none !important;
      width: calc(100% - 75px - 1rem) !important;
      min-width: calc(100% - 75px - 1rem) !important;
      padding: 0 !important;
      margin: 0 !important;
    }
  </style>
  
  {%- comment -%} DOM Inspector + Ultra-Aggressive Fix {%- endcomment -%}
  <script>
    // DOM Inspector Function
    function inspectDOM() {
      console.log('üîç === DOM STRUCTURE INSPECTION ===');
      
      // Find all possible gallery containers
      const possibleGalleries = [
        '.product-gallery',
        '[data-product-gallery]',
        '.product__media-wrapper',
        '.media-gallery',
        '.product-media'
      ];
      
      possibleGalleries.forEach(selector => {
        const el = document.querySelector(selector);
        if (el) {
          console.log(`‚úÖ Found: ${selector}`);
          console.log('Classes:', el.className);
          console.log('Width:', el.offsetWidth);
          console.log('Computed styles:', window.getComputedStyle(el));
          console.log('Parent:', el.parentElement?.className);
          console.log('Children:', Array.from(el.children).map(c => c.className));
        } else {
          console.log(`‚ùå Not found: ${selector}`);
        }
      });
      
      // Find all possible main containers
      const possibleMains = [
        '.product-gallery__main',
        '.media-gallery__main',
        '.product-media__main',
        '[data-media-wrapper]'
      ];
      
      possibleMains.forEach(selector => {
        const el = document.querySelector(selector);
        if (el) {
          console.log(`‚úÖ Main found: ${selector}`);
          console.log('Classes:', el.className);
          console.log('Width:', el.offsetWidth);
          console.log('Max-width:', window.getComputedStyle(el).maxWidth);
        }
      });
      
      // Inspect the actual product page structure
      const productPage = document.querySelector('.product');
      if (productPage) {
        console.log('üè∑Ô∏è Product page structure:');
        console.log('Product classes:', productPage.className);
        const mediaWrapper = productPage.querySelector('[class*="media"]');
        if (mediaWrapper) {
          console.log('Media wrapper classes:', mediaWrapper.className);
          console.log('Media wrapper width:', mediaWrapper.offsetWidth);
        }
      }
    }
    
    // Ultra-Aggressive Fix Function  
    function ultraAggressiveFix() {
      console.log('üöÄ === ULTRA-AGGRESSIVE FIX STARTING ===');
      
      // Find any element that might be the gallery
      const selectors = [
        '.product-gallery',
        '[data-product-gallery]',
        '.product__media-wrapper .product-gallery',
        '.media-gallery',
        '.product-media'
      ];
      
      let gallery = null;
      let main = null;
      
      for (const selector of selectors) {
        gallery = document.querySelector(selector);
        if (gallery) {
          console.log(`‚úÖ Gallery found with selector: ${selector}`);
          break;
        }
      }
      
      if (!gallery) {
        console.log('‚ùå No gallery found, trying to create structure');
        return false;
      }
      
      // Find main container
      const mainSelectors = [
        '.product-gallery__main',
        '.media-gallery__main', 
        '[data-media-wrapper]',
        '.product-media__main'
      ];
      
      for (const selector of mainSelectors) {
        main = document.querySelector(selector);
        if (main) {
          console.log(`‚úÖ Main found with selector: ${selector}`);
          break;
        }
      }
      
      if (!main) {
        // Look for any direct child that might be the main area
        const children = Array.from(gallery.children);
        main = children.find(child => 
          child.offsetWidth > 200 || 
          child.querySelector('img') ||
          child.className.includes('main') ||
          child.className.includes('media')
        );
        if (main) {
          console.log('‚úÖ Main found as gallery child:', main.className);
        }
      }
      
      if (gallery && main) {
        console.log('üîß Applying ultra-aggressive fixes...');
        
        // Get parent containers for ultra-specific targeting
        let current = gallery;
        const parents = [];
        while (current && current !== document.body) {
          parents.unshift(current);
          current = current.parentElement;
        }
        
        console.log('DOM path:', parents.map(p => p.tagName + '.' + p.className).join(' > '));
        
        // Fix the parent .product-page container first
        const productPage = document.querySelector('.product-page');
        if (productPage) {
          console.log('üîß Fixing .product-page container...');
          productPage.style.setProperty('max-width', 'none', 'important');
          productPage.style.setProperty('width', '100%', 'important');
          productPage.style.setProperty('grid-template-columns', '1fr', 'important');
          productPage.style.setProperty('display', 'block', 'important');
        }
        
        // Fix the media wrapper
        const mediaWrapper = document.querySelector('.product__media-wrapper');
        if (mediaWrapper) {
          console.log('üîß Fixing media wrapper...');
          mediaWrapper.style.setProperty('max-width', 'none', 'important');
          mediaWrapper.style.setProperty('width', '100%', 'important');
        }
        
        // Apply fixes to gallery
        gallery.style.setProperty('display', 'grid', 'important');
        gallery.style.setProperty('grid-template-columns', '75px 1fr', 'important');
        gallery.style.setProperty('gap', '1rem', 'important');
        gallery.style.setProperty('max-width', 'none', 'important');
        gallery.style.setProperty('width', '100%', 'important');
        
        // Apply fixes to main
        main.style.setProperty('max-width', 'none', 'important');
        main.style.setProperty('width', 'calc(100% - 75px - 1rem)', 'important');
        main.style.setProperty('min-width', 'calc(100% - 75px - 1rem)', 'important');
        main.style.setProperty('height', 'auto', 'important');
        main.style.setProperty('min-height', 'auto', 'important');
        main.style.setProperty('max-height', 'none', 'important');
        main.style.setProperty('padding', '0', 'important');
        main.style.setProperty('margin', '0', 'important');
        main.style.setProperty('flex-basis', 'calc(100% - 75px - 1rem)', 'important');
        main.style.setProperty('flex-grow', '0', 'important');
        main.style.setProperty('flex-shrink', '0', 'important');
        main.style.setProperty('display', 'block', 'important');
        
        // Apply to all nested elements
        const allElements = main.querySelectorAll('*');
        allElements.forEach(el => {
          if (el.tagName === 'IMG' || el.className.includes('image')) {
            el.style.setProperty('max-width', 'none', 'important');
            el.style.setProperty('width', '100%', 'important');
            el.style.setProperty('height', 'auto', 'important');
            el.style.setProperty('object-fit', 'cover', 'important');
            el.style.setProperty('object-position', 'center', 'important');
            el.style.setProperty('display', 'block', 'important');
          } else if (el.className.includes('inner') || el.className.includes('container') || el.className.includes('main-image')) {
            el.style.setProperty('max-width', 'none', 'important');
            el.style.setProperty('width', '100%', 'important');
            el.style.setProperty('height', 'auto', 'important');
            el.style.setProperty('min-height', 'auto', 'important');
            el.style.setProperty('max-height', 'none', 'important');
            el.style.setProperty('display', 'block', 'important');
            if (el.className.includes('main-image')) {
              el.style.setProperty('position', 'relative', 'important');
            }
          }
        });
        
        console.log('‚úÖ Ultra-aggressive fixes applied');
        
        // Verify results
        setTimeout(() => {
          const newWidth = main.offsetWidth;
          const parentWidth = gallery.offsetWidth;
          const utilization = Math.round((newWidth / (parentWidth - 75 - 16)) * 100);
          console.log(`üìä New utilization: ${utilization}% (${newWidth}px / ${parentWidth - 75 - 16}px)`);
          
          // Auto-fit container height to image with multiple attempts
          const autoFitHeight = () => {
            const img = document.querySelector('.product-gallery__image');
            if (img && img.complete && img.offsetHeight > 0) {
              const targetHeight = img.offsetHeight + 20;
              main.style.setProperty('height', targetHeight + 'px', 'important');
              console.log(`üìê Container height auto-fitted: ${targetHeight}px`);
              return true;
            }
            return false;
          };
          
          // Try multiple times with increasing delays
          if (!autoFitHeight()) {
            setTimeout(autoFitHeight, 300);
            setTimeout(autoFitHeight, 600);
            setTimeout(autoFitHeight, 1000);
          }
        }, 100);
        
        return true;
      } else {
        console.log('‚ùå Required elements not found');
        console.log('Gallery:', gallery);
        console.log('Main:', main);
        return false;
      }
    }
    
    // Execute inspection and fix
    function runDiagnostics() {
      inspectDOM();
      setTimeout(() => {
        ultraAggressiveFix();
      }, 200);
    }
    
    // Execute on multiple events with delays
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', function() {
        setTimeout(runDiagnostics, 100);
        setTimeout(ultraAggressiveFix, 500);
        setTimeout(ultraAggressiveFix, 1000);
        setTimeout(ultraAggressiveFix, 2000);
      });
    } else {
      runDiagnostics();
      setTimeout(ultraAggressiveFix, 100);
      setTimeout(ultraAggressiveFix, 500);
    }
    
    window.addEventListener('load', function() {
      setTimeout(runDiagnostics, 200);
      setTimeout(ultraAggressiveFix, 1000);
      
      // Force height fix after everything fully loaded
      setTimeout(function() {
        const main = document.querySelector('.product-gallery__main');
        const img = document.querySelector('.product-gallery__image');
        if (main && img && img.complete && img.offsetHeight > 0) {
          const targetHeight = img.offsetHeight + 20;
          main.style.setProperty('height', targetHeight + 'px', 'important');
          console.log('üéØ Window load height fix applied:', targetHeight + 'px');
        }
      }, 1500);
    });
    
    window.addEventListener('resize', function() {
      setTimeout(ultraAggressiveFix, 100);
    });
    
    // Make functions globally available
    window.inspectDOM = inspectDOM;
    window.ultraAggressiveFix = ultraAggressiveFix;
    
    // Advanced debug functions for browser console
    window.debugImageDimensions = function() {
      console.log('üîç === DETAILED IMAGE DIMENSIONS DEBUG ===');
      
      const main = document.querySelector('.product-gallery__main');
      const mainInner = document.querySelector('.product-gallery__main-inner');
      const mainImage = document.querySelector('.product-gallery__main-image.active') || document.querySelector('.product-gallery__main-image');
      const actualImg = mainImage ? mainImage.querySelector('img') || mainImage.querySelector('.product-gallery__image') : null;
      
      if (!main || !mainInner || !mainImage) {
        console.log('‚ùå Missing elements:', { main: !!main, mainInner: !!mainInner, mainImage: !!mainImage });
        return;
      }
      
      console.log('üìä CONTAINER DIMENSIONS:');
      console.log('Main container:', {
        width: main.offsetWidth,
        height: main.offsetHeight,
        computedStyle: {
          width: getComputedStyle(main).width,
          height: getComputedStyle(main).height,
          minHeight: getComputedStyle(main).minHeight,
          maxHeight: getComputedStyle(main).maxHeight,
          display: getComputedStyle(main).display,
          position: getComputedStyle(main).position
        }
      });
      
      console.log('Main inner:', {
        width: mainInner.offsetWidth,
        height: mainInner.offsetHeight,
        computedStyle: {
          width: getComputedStyle(mainInner).width,
          height: getComputedStyle(mainInner).height,
          minHeight: getComputedStyle(mainInner).minHeight,
          maxHeight: getComputedStyle(mainInner).maxHeight,
          display: getComputedStyle(mainInner).display,
          position: getComputedStyle(mainInner).position,
          overflow: getComputedStyle(mainInner).overflow
        }
      });
      
      console.log('Main image container:', {
        width: mainImage.offsetWidth,
        height: mainImage.offsetHeight,
        computedStyle: {
          width: getComputedStyle(mainImage).width,
          height: getComputedStyle(mainImage).height,
          position: getComputedStyle(mainImage).position,
          top: getComputedStyle(mainImage).top,
          left: getComputedStyle(mainImage).left,
          display: getComputedStyle(mainImage).display,
          opacity: getComputedStyle(mainImage).opacity,
          visibility: getComputedStyle(mainImage).visibility
        }
      });
      
      if (actualImg) {
        console.log('üì∑ ACTUAL IMAGE:');
        console.log('Image element:', {
          src: actualImg.src,
          naturalWidth: actualImg.naturalWidth,
          naturalHeight: actualImg.naturalHeight,
          width: actualImg.offsetWidth,
          height: actualImg.offsetHeight,
          computedStyle: {
            width: getComputedStyle(actualImg).width,
            height: getComputedStyle(actualImg).height,
            objectFit: getComputedStyle(actualImg).objectFit,
            objectPosition: getComputedStyle(actualImg).objectPosition,
            display: getComputedStyle(actualImg).display
          }
        });
        
        // Calculate aspect ratios
        const containerRatio = mainInner.offsetWidth / mainInner.offsetHeight;
        const imageRatio = actualImg.naturalWidth / actualImg.naturalHeight;
        console.log('üìê ASPECT RATIOS:');
        console.log('Container ratio:', containerRatio.toFixed(2));
        console.log('Image ratio:', imageRatio.toFixed(2));
        console.log('Ratio match:', Math.abs(containerRatio - imageRatio) < 0.1 ? '‚úÖ Good' : '‚ùå Mismatch');
      }
      
      // Check for conflicting CSS rules
      console.log('üîß CSS CONFLICTS CHECK:');
      const mainStyles = getComputedStyle(main);
      const innerStyles = getComputedStyle(mainInner);
      const imageStyles = getComputedStyle(mainImage);
      
      const conflicts = [];
      if (mainStyles.height !== 'auto' && mainStyles.height !== '0px') conflicts.push(`Main height: ${mainStyles.height}`);
      if (innerStyles.height !== 'auto' && innerStyles.height !== '0px') conflicts.push(`Inner height: ${innerStyles.height}`);
      if (innerStyles.maxHeight !== 'none') conflicts.push(`Inner max-height: ${innerStyles.maxHeight}`);
      if (imageStyles.position === 'absolute') conflicts.push(`Image position: absolute`);
      if (imageStyles.height !== 'auto' && imageStyles.height !== '0px') conflicts.push(`Image height: ${imageStyles.height}`);
      
      if (conflicts.length > 0) {
        console.log('‚ùå Found conflicts:', conflicts);
      } else {
        console.log('‚úÖ No obvious conflicts detected');
      }
      
      return { main, mainInner, mainImage, actualImg };
    };
    
    window.forceImageFitDebug = function() {
      console.log('üöÄ FORCING IMAGE TO FIT CONTAINER WIDTH...');
      
      const elements = window.debugImageDimensions();
      if (!elements.actualImg) return false;
      
      const { main, mainInner, mainImage, actualImg } = elements;
      
      // Force containers to fit image
      const imageRatio = actualImg.naturalWidth / actualImg.naturalHeight;
      const containerWidth = main.offsetWidth;
      const targetHeight = containerWidth / imageRatio;
      
      console.log(`üéØ Target: width=${containerWidth}px, height=${targetHeight}px (ratio=${imageRatio.toFixed(2)})`);
      
      // Apply styles
      main.style.setProperty('height', targetHeight + 'px', 'important');
      main.style.setProperty('min-height', targetHeight + 'px', 'important');
      main.style.setProperty('max-height', targetHeight + 'px', 'important');
      
      mainInner.style.setProperty('height', targetHeight + 'px', 'important');
      mainInner.style.setProperty('min-height', targetHeight + 'px', 'important');
      mainInner.style.setProperty('max-height', targetHeight + 'px', 'important');
      
      mainImage.style.setProperty('height', targetHeight + 'px', 'important');
      mainImage.style.setProperty('min-height', targetHeight + 'px', 'important');
      mainImage.style.setProperty('max-height', targetHeight + 'px', 'important');
      
      actualImg.style.setProperty('width', '100%', 'important');
      actualImg.style.setProperty('height', '100%', 'important');
      actualImg.style.setProperty('object-fit', 'cover', 'important');
      
      console.log('‚úÖ Applied forced dimensions. Check result.');
      setTimeout(() => window.debugImageDimensions(), 100);
      
      return true;
    };
    
    console.log('üéØ DOM Inspector + Ultra-Aggressive Fix loaded');
    console.log('üîß Debug functions ready:');
    console.log('- window.debugImageDimensions() - Detailed dimension analysis');
    console.log('- window.forceImageFitDebug() - Force image to fit container width');
    console.log('üí° Run inspectDOM() or ultraAggressiveFix() manually in console if needed');
  </script>

  {% unless product.has_only_default_variant %}
    {{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
    {{ 'component-swatch.css' | asset_url | stylesheet_tag }}
  {% endunless %}
  {%- if product.quantity_price_breaks_configured? -%}
    {{ 'component-volume-pricing.css' | asset_url | stylesheet_tag }}
  {%- endif -%}

  {%- style -%}
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }
  {%- endstyle -%}

  <script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  {%- if product.quantity_price_breaks_configured? -%}
    <script src="{{ 'show-more.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}
  
  <script src="{{ 'product-thumbnail-gallery.js' | asset_url }}" defer="defer"></script>

  {% if section.settings.image_zoom == 'hover' %}
    <script id="EnableZoomOnHover-main" src="{{ 'magnify.js' | asset_url }}" defer="defer"></script>
  {% endif %}
  {%- if request.design_mode -%}
    <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
  {%- endif -%}

  {%- assign first_3d_model = product.media | where: 'media_type', 'model' | first -%}
  {%- if first_3d_model -%}
    {{ 'component-product-model.css' | asset_url | stylesheet_tag }}
    <link
      id="ModelViewerStyle"
      rel="stylesheet"
      href="https://cdn.shopify.com/shopifycloud/model-viewer-ui/assets/v1.0/model-viewer-ui.css"
      media="print"
      onload="this.media='all'"
    >
    <link
      id="ModelViewerOverride"
      rel="stylesheet"
      href="{{ 'component-model-viewer-ui.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
  {%- endif -%}

  {% assign variant_images = product.images | where: 'attached_to_variant?', true | map: 'src' %}
  <div class="page-width">
    <div class="product product--{{ section.settings.media_size }} product--{{ section.settings.media_position }} product--{{ section.settings.gallery_layout }} product--mobile-{{ section.settings.mobile_thumbnails }} grid grid--1-col {% if product.media.size > 0 %}grid--2-col-tablet{% else %}product--no-media{% endif %}">
      <div class="grid__item product__media-wrapper" style="width: 75% !important; max-width: 75% !important; flex: 0 0 75% !important; padding-right: 1rem !important; box-sizing: border-box !important; min-width: 75% !important;" data-compact-layout>
        {%- if product.images.size > 1 -%}
          {% render 'product-thumbnail-gallery', 
             product: product, 
             section_id: section.id,
             enable_zoom: section.settings.image_zoom %}
        {%- else -%}
          {% render 'product-media-gallery', variant_images: variant_images %}
        {%- endif -%}
      </div>
      <div class="product__info-wrapper grid__item{% if settings.page_width > 1400 and section.settings.media_size == "small" %} product__info-wrapper--extra-padding{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}" style="width: 25% !important; max-width: 25% !important; flex: 0 0 25% !important; padding-left: 1rem !important; box-sizing: border-box !important; min-width: 25% !important;" data-compact-layout>
        <section
          id="ProductInfo-{{ section.id }}"
          class="product__info-container{% if section.settings.enable_sticky_info %} product__column-sticky{% endif %}"
        >
          {%- assign product_form_id = 'product-form-' | append: section.id -%}

          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'text' -%}
                <p
                  class="product__text inline-richtext{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if block.settings.text contains 'Meta description' %} meta-desc-text{% elsif block.settings.text contains 'SKU code' %} sku-text{% endif %}"
                  {{ block.shopify_attributes }}
                >
                  {%- if block.settings.text contains 'Meta description' -%}
                    {{ page_description | default: product.description | strip_html | truncate: 160 }}
                  {%- elsif block.settings.text contains 'SKU code' -%}
                    SKU: {{ product.selected_or_first_available_variant.sku | default: 'N/A' }}
                  {%- elsif block.settings.text == 'VENDOR_LINK_PLACEHOLDER' -%}
                    {% render 'vendor-link', vendor: product.vendor, text_style: block.settings.text_style, class: 'product__vendor-link' %}
                  {%- else -%}
                    {{- block.settings.text -}}
                  {%- endif -%}
                </p>
              {%- when 'title' -%}
                <div class="product__title" {{ block.shopify_attributes }}>
                  <h1>{{ product.title | escape }}</h1>
                  <a href="{{ product.url }}" class="product__title">
                    <h2 class="h1">
                      {{ product.title | escape }}
                    </h2>
                  </a>
                </div>
              {%- when 'price' -%}
                <div id="price-{{ section.id }}" role="status" {{ block.shopify_attributes }}>
                  {%- render 'price',
                    product: product,
                    use_variant: true,
                    show_badges: true,
                    price_class: 'price--large'
                  -%}
                </div>
                {%- if product.quantity_price_breaks_configured? -%}
                  <div class="volume-pricing-note" id="Volume-Note-{{ section.id }}">
                    <span>{{ 'products.product.volume_pricing.note' | t }}</span>
                  </div>
                {%- endif -%}
                {%- if cart.taxes_included or cart.duties_included or shop.shipping_policy.body != blank -%}
                  <div class="product__tax caption rte">
                    {%- if cart.duties_included and cart.taxes_included -%}
                      {{ 'products.product.duties_and_taxes_included' | t }}
                    {%- elsif cart.taxes_included -%}
                      {{ 'products.product.taxes_included' | t }}
                    {%- elsif cart.duties_included -%}
                      {{ 'products.product.duties_included' | t }}
                    {%- endif -%}
                    {%- if shop.shipping_policy.body != blank -%}
                      {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                    {%- endif -%}
                  </div>
                {%- endif -%}
                <div {{ block.shopify_attributes }}>
                  {%- assign product_form_installment_id = 'product-form-installment-' | append: section.id -%}
                  {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                    <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    {{ form | payment_terms }}
                  {%- endform -%}
                </div>
              {%- when 'inventory' -%}
                <p
                  class="product__inventory{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.inventory_management != 'shopify' %} visibility-hidden{% endif %}"
                  {{ block.shopify_attributes }}
                  id="Inventory-{{ section.id }}"
                  role="status"
                >
                  {%- if product.selected_or_first_available_variant.inventory_management == 'shopify' -%}
                    {%- if product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                      {%- if product.selected_or_first_available_variant.inventory_quantity
                          <= block.settings.inventory_threshold
                      -%}
                        <span class="svg-wrapper" style="color: rgb(238, 148, 65)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_low_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_low_stock' | t -}}
                        {%- endif -%}
                      {%- else -%}
                        <span class="svg-wrapper" style="color: rgb(62, 214, 96)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {%- if block.settings.show_inventory_quantity -%}
                          {{-
                            'products.product.inventory_in_stock_show_count'
                            | t: quantity: product.selected_or_first_available_variant.inventory_quantity
                          -}}
                        {%- else -%}
                          {{- 'products.product.inventory_in_stock' | t -}}
                        {%- endif -%}
                      {%- endif -%}
                    {%- else -%}
                      {%- if product.selected_or_first_available_variant.inventory_policy == 'continue' -%}
                        <span class="svg-wrapper" style="color: rgb(62, 214, 96)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock_continue_selling' | t -}}
                      {%- else -%}
                        <span class="svg-wrapper" style="color: rgb(200, 200, 200)">
                          {{- 'icon-inventory-status.svg' | inline_asset_content -}}
                        </span>
                        {{- 'products.product.inventory_out_of_stock' | t -}}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endif -%}
                </p>
              {%- when 'description' -%}
                {%- if product.description != blank -%}
                  <div class="product__description rte quick-add-hidden" {{ block.shopify_attributes }}>
                    {{ product.description }}
                  </div>
                {%- endif -%}
              {%- when 'metafields' -%}
                <div class="product__metafields" {{ block.shopify_attributes }}>
                  {%- if block.settings.metafield_namespace and block.settings.metafield_key -%}
                    {%- assign metafield_value = product.metafields[block.settings.metafield_namespace][block.settings.metafield_key] -%}
                    {%- if metafield_value != blank -%}
                      <div class="product__metafield-item">
                        {%- if block.settings.show_label and block.settings.label != blank -%}
                          <span class="product__metafield-label{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                            {{ block.settings.label }}
                          </span>
                        {%- endif -%}
                        <span class="product__metafield-value{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}">
                          {%- if metafield_value.type == 'url' -%}
                            <a href="{{ metafield_value }}" target="_blank" rel="noopener">{{ metafield_value }}</a>
                          {%- elsif metafield_value.type == 'file_reference' -%}
                            <a href="{{ metafield_value | file_url }}" target="_blank" rel="noopener">{{ metafield_value.alt | default: 'Download' }}</a>
                          {%- elsif metafield_value.type == 'list.file_reference' -%}
                            {%- for file in metafield_value.value -%}
                              <a href="{{ file | file_url }}" target="_blank" rel="noopener">{{ file.alt | default: 'Download' }}</a>
                              {%- unless forloop.last -%}, {%- endunless -%}
                            {%- endfor -%}
                          {%- elsif metafield_value.type == 'rating' -%}
                            {{ metafield_value.value.rating }} / {{ metafield_value.value.scale_max }}
                          {%- elsif metafield_value.type == 'date' -%}
                            {{ metafield_value | date: '%B %d, %Y' }}
                          {%- elsif metafield_value.type == 'date_time' -%}
                            {{ metafield_value | date: '%B %d, %Y at %I:%M %p' }}
                          {%- elsif metafield_value.type == 'color' -%}
                            <span class="color-swatch" style="background-color: {{ metafield_value }}"></span>
                            {{ metafield_value }}
                          {%- elsif metafield_value.type == 'dimension' -%}
                            {{ metafield_value.value }} {{ metafield_value.unit }}
                          {%- elsif metafield_value.type == 'weight' -%}
                            {{ metafield_value.value }} {{ metafield_value.unit }}
                          {%- elsif metafield_value.type == 'volume' -%}
                            {{ metafield_value.value }} {{ metafield_value.unit }}
                          {%- elsif metafield_value.type == 'money' -%}
                            {{ metafield_value | money }}
                          {%- elsif metafield_value.type == 'boolean' -%}
                            {{ metafield_value | capitalize }}
                          {%- elsif metafield_value.type == 'rich_text_field' -%}
                            <div class="rte">{{ metafield_value }}</div>
                          {%- elsif metafield_value.type contains 'list.' -%}
                            {%- for item in metafield_value.value -%}
                              {{ item }}
                              {%- unless forloop.last -%}, {%- endunless -%}
                            {%- endfor -%}
                          {%- else -%}
                            {{ metafield_value }}
                          {%- endif -%}
                        </span>
                      </div>
                    {%- endif -%}
                  {%- endif -%}
                </div>
              {%- when 'all_metafields' -%}
                <div class="product__metafields dmx-style" {{ block.shopify_attributes }}>
                  {%- comment %} Header gi·ªëng ƒêi·ªán M√°y Xanh {%- endcomment -%}
                  <div class="product__metafields-header">
                    <h3 class="product__metafields-title">{{ block.settings.heading | default: 'Th√¥ng s·ªë' }}</h3>
                  </div>
                  
                  {%- comment %} B·∫£ng th√¥ng s·ªë 2 c·ªôt nh∆∞ DMX {%- endcomment -%}
                  <div class="product__metafields-table">
                    {%- comment %} Th√¥ng s·ªë cho n·ªôi th·∫•t {%- endcomment -%}
                    
                    {%- comment %} M√£ s·∫£n ph·∫©m {%- endcomment -%}
                    {%- if product.sku != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">M√£ s·∫£n ph·∫©m</div>
                        <div class="dmx-spec-value">{{ product.sku }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} Th∆∞∆°ng hi·ªáu {%- endcomment -%}
                    {%- if product.metafields.specs.brand != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">Th∆∞∆°ng hi·ªáu</div>
                        <div class="dmx-spec-value">{{ product.metafields.specs.brand }}</div>
                      </div>
                    {%- elsif product.vendor != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">Th∆∞∆°ng hi·ªáu</div>
                        <div class="dmx-spec-value">{{ product.vendor }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} Xu·∫•t x·ª© {%- endcomment -%}
                    {%- assign origin = product.metafields.specs.xuat_xu | default: product.metafields.custom.origin | default: 'Vi·ªát Nam' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">Xu·∫•t x·ª©</div>
                      <div class="dmx-spec-value">{{ origin }}</div>
                    </div>
                    
                    {%- comment %} Ch·∫•t li·ªáu {%- endcomment -%}
                    {%- assign material = product.metafields.custom.material | default: product.metafields.specs.chat_lieu | default: 'G·ªó t·ª± nhi√™n' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">Ch·∫•t li·ªáu</div>
                      <div class="dmx-spec-value">{{ material }}</div>
                    </div>
                    
                    {%- comment %} K√≠ch th∆∞·ªõc {%- endcomment -%}
                    {%- assign size = product.metafields.specs.kich_thuoc | default: product.metafields.custom.dimensions | default: 'Li√™n h·ªá' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">K√≠ch th∆∞·ªõc (D x R x C)</div>
                      <div class="dmx-spec-value">{{ size }}</div>
                    </div>
                    
                    {%- comment %} M√†u s·∫Øc {%- endcomment -%}
                    {%- assign color = product.metafields.specs.mau_sac | default: product.metafields.custom.color | default: 'N√¢u g·ªó t·ª± nhi√™n' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">M√†u s·∫Øc</div>
                      <div class="dmx-spec-value">{{ color }}</div>
                    </div>
                    
                    {%- comment %} Phong c√°ch {%- endcomment -%}
                    {%- assign style = product.metafields.specs.phong_cach | default: product.metafields.custom.style | default: 'Hi·ªán ƒë·∫°i' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">Phong c√°ch</div>
                      <div class="dmx-spec-value">{{ style }}</div>
                    </div>
                    
                    {%- comment %} C√¥ng d·ª•ng {%- endcomment -%}
                    {%- assign usage = product.metafields.specs.cong_dung | default: product.metafields.custom.usage -%}
                    {%- if usage != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">C√¥ng d·ª•ng</div>
                        <div class="dmx-spec-value">{{ usage }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} Tr·ªçng l∆∞·ª£ng {%- endcomment -%}
                    {%- assign weight = product.metafields.specs.trong_luong | default: product.metafields.custom.weight -%}
                    {%- if weight != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">Tr·ªçng l∆∞·ª£ng</div>
                        <div class="dmx-spec-value">{{ weight }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} ƒê·ªô d√†y {%- endcomment -%}
                    {%- assign thickness = product.metafields.specs.do_day | default: product.metafields.custom.thickness -%}
                    {%- if thickness != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">ƒê·ªô d√†y</div>
                        <div class="dmx-spec-value">{{ thickness }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} ƒê·ªô b·ªÅn {%- endcomment -%}
                    {%- assign durability = product.metafields.specs.do_ben | default: product.metafields.custom.durability | default: 'S·ª≠ d·ª•ng l√¢u d√†i 10+ nƒÉm' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">ƒê·ªô b·ªÅn</div>
                      <div class="dmx-spec-value">{{ durability }}</div>
                    </div>
                    
                    {%- comment %} D·ªÖ d√†ng l·∫Øp ƒë·∫∑t {%- endcomment -%}
                    {%- assign assembly = product.metafields.specs.lap_dat | default: 'L·∫Øp ƒë·∫∑t ƒë∆°n gi·∫£n' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">L·∫Øp ƒë·∫∑t</div>
                      <div class="dmx-spec-value">{{ assembly }}</div>
                    </div>
                    
                    {%- comment %} B·∫£o qu·∫£n {%- endcomment -%}
                    {%- assign care = product.metafields.specs.bao_quan | default: 'Lau ch√πi b·∫±ng khƒÉn m·ªÅm' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">C√°ch b·∫£o qu·∫£n</div>
                      <div class="dmx-spec-value">{{ care }}</div>
                    </div>
                    
                    {%- comment %} Lo·∫°i s·∫£n ph·∫©m {%- endcomment -%}
                    {%- if product.type != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row">
                        <div class="dmx-spec-label">Lo·∫°i s·∫£n ph·∫©m</div>
                        <div class="dmx-spec-value">{{ product.type }}</div>
                      </div>
                    {%- endif -%}
                    
                    {%- comment %} T√¨nh tr·∫°ng {%- endcomment -%}
                    {%- assign condition = product.metafields.specs.tinh_trang | default: 'H√†ng ch√≠nh h√£ng m·ªõi 100%' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">T√¨nh tr·∫°ng</div>
                      <div class="dmx-spec-value">{{ condition }}</div>
                    </div>
                    
                    {%- comment %} T√¨nh tr·∫°ng kho {%- endcomment -%}
                    {%- assign stock_status = 'C√≤n h√†ng' -%}
                    {%- if product.available == false -%}
                      {%- assign stock_status = 'H·∫øt h√†ng' -%}
                    {%- elsif product.selected_or_first_available_variant.inventory_quantity -%}
                      {%- if product.selected_or_first_available_variant.inventory_quantity > 10 -%}
                        {%- assign stock_status = 'C√≤n h√†ng' -%}
                      {%- elsif product.selected_or_first_available_variant.inventory_quantity > 0 -%}
                        {%- assign stock_status = 'S·∫Øp h·∫øt h√†ng' -%}
                      {%- else -%}
                        {%- assign stock_status = 'H·∫øt h√†ng' -%}
                      {%- endif -%}
                    {%- endif -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">T√¨nh tr·∫°ng kho</div>
                      <div class="dmx-spec-value">{{ stock_status }}</div>
                    </div>
                    
                    {%- comment %} Th·ªùi gian giao h√†ng {%- endcomment -%}
                    {%- assign delivery = product.metafields.specs.giao_hang | default: '2-5 ng√†y l√†m vi·ªác' -%}
                    {%- assign metafield_count = metafield_count | plus: 1 -%}
                    <div class="dmx-spec-row">
                      <div class="dmx-spec-label">Th·ªùi gian giao h√†ng</div>
                      <div class="dmx-spec-value">{{ delivery }}</div>
                    </div>
                    
                    {%- comment %} B·∫£o h√†nh {%- endcomment -%}
                    {%- if product.metafields.specs.bao_hanh != blank -%}
                      {%- assign metafield_count = metafield_count | plus: 1 -%}
                      <div class="dmx-spec-row dmx-spec-row--highlight">
                        <div class="dmx-spec-label">B·∫£o h√†nh</div>
                        <div class="dmx-spec-value dmx-spec-value--warranty">{{ product.metafields.specs.bao_hanh }}</div>
                      </div>
                    {%- else -%}
                      <div class="dmx-spec-row dmx-spec-row--highlight">
                        <div class="dmx-spec-label">B·∫£o h√†nh</div>
                        <div class="dmx-spec-value dmx-spec-value--warranty">12 th√°ng ƒë·ªïi m·ªõi</div>
                      </div>
                    {%- endif -%}
                  </div>
                  
                  {%- comment %} USP - Cam k·∫øt d·ªãch v·ª• cho ng√†nh n·ªôi th·∫•t {%- endcomment -%}
                  <div class="product__metafields-usp">
                    <div class="dmx-usp-row">
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">üè†</span>
                        <span class="dmx-usp-text">H√†ng ch√≠nh h√£ng 100%</span>
                      </div>
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">üöö</span>
                        <span class="dmx-usp-text">Giao h√†ng & l·∫Øp ƒë·∫∑t t·∫≠n n∆°i</span>
                      </div>
                    </div>
                    <div class="dmx-usp-row">
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">üõ°Ô∏è</span>
                        <span class="dmx-usp-text">B·∫£o h√†nh 12 th√°ng</span>
                      </div>
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">ÔøΩ</span>
                        <span class="dmx-usp-text">Ch·∫•t l∆∞·ª£ng cao c·∫•p</span>
                      </div>
                    </div>
                    <div class="dmx-usp-row">
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">üîß</span>
                        <span class="dmx-usp-text">L·∫Øp ƒë·∫∑t chuy√™n nghi·ªáp</span>
                      </div>
                      <div class="dmx-usp-item">
                        <span class="dmx-usp-icon">ÔøΩ</span>
                        <span class="dmx-usp-text">T∆∞ v·∫•n 24/7</span>
                      </div>
                    </div>
                  </div>
                  
                  {%- comment %} Rating v√† ƒë√°nh gi√° {%- endcomment -%}
                  <div class="product__metafields-rating">
                    <div class="dmx-rating-header">
                      <h4 class="dmx-rating-title">ƒê√°nh gi√° kh√°ch h√†ng</h4>
                    </div>
                    <div class="dmx-rating-content">
                      <div class="dmx-rating-score">
                        <div class="dmx-stars">
                          {%- assign rating = product.metafields.reviews.average_rating | default: 4.5 -%}
                          {%- for i in (1..5) -%}
                            {%- if rating >= i -%}
                              <span class="dmx-star dmx-star--filled">‚òÖ</span>
                            {%- elsif rating >= i -%}
                              {%- assign half_check = i | minus: 0.5 -%}
                              {%- if rating >= half_check -%}
                                <span class="dmx-star dmx-star--half">‚òÖ</span>
                              {%- else -%}
                                <span class="dmx-star">‚òÜ</span>
                              {%- endif -%}
                            {%- else -%}
                              <span class="dmx-star">‚òÜ</span>
                            {%- endif -%}
                          {%- endfor -%}
                        </div>
                        <div class="dmx-rating-text">
                          <span class="dmx-score">{{ rating }}</span>
                          <span class="dmx-reviews-count">({{ product.metafields.reviews.total_reviews | default: 127 }} ƒë√°nh gi√°)</span>
                        </div>
                      </div>
                      <div class="dmx-rating-summary">
                        <div class="dmx-rating-item">
                          <span class="dmx-rating-label">Ch·∫•t l∆∞·ª£ng:</span>
                          <div class="dmx-rating-bar">
                            <div class="dmx-rating-fill" style="width: 90%"></div>
                          </div>
                          <span class="dmx-rating-percent">90%</span>
                        </div>
                        <div class="dmx-rating-item">
                          <span class="dmx-rating-label">Gi√° c·∫£:</span>
                          <div class="dmx-rating-bar">
                            <div class="dmx-rating-fill" style="width: 85%"></div>
                          </div>
                          <span class="dmx-rating-percent">85%</span>
                        </div>
                        <div class="dmx-rating-item">
                          <span class="dmx-rating-label">D·ªãch v·ª•:</span>
                          <div class="dmx-rating-bar">
                            <div class="dmx-rating-fill" style="width: 95%"></div>
                          </div>
                          <span class="dmx-rating-percent">95%</span>
                        </div>
                      </div>
                    </div>
                  </div>
                  
                  {%- comment %} Download section nh∆∞ DMX {%- endcomment -%}
                  {%- if product.metafields.specs.bang_ma_mau_vat_lieu != blank -%}
                    <div class="product__download-section">
                      <a href="{{ product.metafields.specs.bang_ma_mau_vat_lieu | file_url }}" 
                         target="_blank" 
                         rel="noopener" 
                         class="dmx-download-btn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                          <polyline points="7,10 12,15 17,10"></polyline>
                          <line x1="12" y1="15" x2="12" y2="3"></line>
                        </svg>
                        T·∫£i th√¥ng tin chi ti·∫øt s·∫£n ph·∫©m (PDF)
                      </a>
                    </div>
                  {%- endif -%}
                  
                  {%- if metafield_count == 0 -%}
                    <div class="dmx-empty-specs">
                      <p>Th√¥ng tin chi ti·∫øt s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t s·ªõm</p>
                    </div>
                  {%- endif -%}
                </div>
              {%- when 'sku' -%}
                <p
                  class="product__sku{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}{% if product.selected_or_first_available_variant.sku.size == 0 %} visibility-hidden{% endif %}"
                  id="Sku-{{ section.id }}"
                  role="status"
                  {{ block.shopify_attributes }}
                >
                  <span class="visually-hidden">{{ 'products.product.sku' | t }}:</span>
                  {{- product.selected_or_first_available_variant.sku -}}
                </p>
              {%- when 'custom_liquid' -%}
                {{ block.settings.custom_liquid }}
              {%- when 'collapsible_tab' -%}
                <div class="product__accordion accordion quick-add-hidden" {{ block.shopify_attributes }}>
                  <details id="Details-{{ block.id }}-{{ section.id }}">
                    <summary>
                      <div class="summary__title">
                        {% render 'icon-accordion', icon: block.settings.icon %}
                        <h2 class="h4 accordion__title inline-richtext">
                          {{ block.settings.heading | default: block.settings.page.title | escape }}
                        </h2>
                      </div>
                      {{- 'icon-caret.svg' | inline_asset_content -}}
                    </summary>
                    <div class="accordion__content rte" id="ProductAccordion-{{ block.id }}-{{ section.id }}">
                      {{ block.settings.content }}
                      {{ block.settings.page.content }}
                    </div>
                  </details>
                </div>
              {%- when 'quantity_selector' -%}
                <div
                  id="Quantity-Form-{{ section.id }}"
                  class="product-form__input product-form__quantity{% if settings.inputs_shadow_vertical_offset != 0 and settings.inputs_shadow_vertical_offset < 0 %} product-form__quantity-top{% endif %}"
                  {{ block.shopify_attributes }}
                >
                  {% comment %} TODO: enable theme-check once `item_count_for_variant` is accepted as valid filter {% endcomment %}
                  {% # theme-check-disable %}
                  {%- assign cart_qty = cart
                    | item_count_for_variant: product.selected_or_first_available_variant.id
                  -%}
                  {% # theme-check-enable %}
                  <span class="visually-hidden" id="quantity-label-{{ section.id }}">
                    {%- if cart_qty > 0 -%}
                      {{- 'products.product.quantity.in_cart_aria_label' | t: quantity: cart_qty -}}
                    {%- else -%}
                      {{- 'products.product.quantity.label' | t -}}
                    {%- endif -%}
                  </span>
                  <label
                    class="quantity__label form__label"
                    for="Quantity-{{ section.id }}"
                    aria-labelledby="quantity-label-{{ section.id }}"
                  >
                    <span aria-hidden="true">{{ 'products.product.quantity.label' | t }}</span>
                    <span class="quantity__rules-cart{% if cart_qty == 0 %} hidden{% endif %}" aria-hidden="true">
                      {%- render 'loading-spinner' -%}
                      <span
                        >(
                        {{- 'products.product.quantity.in_cart_html' | t: quantity: cart_qty -}}
                        )</span
                      >
                    </span>
                  </label>
                  <div class="price-per-item__container">
                    <quantity-input class="quantity" data-url="{{ product.url }}" data-section="{{ section.id }}">
                      <button class="quantity__button" name="minus" type="button">
                        <span class="visually-hidden">
                          {{- 'products.product.quantity.decrease' | t: product: product.title | escape -}}
                        </span>
                        <span class="svg-wrapper">
                          {{- 'icon-minus.svg' | inline_asset_content -}}
                        </span>
                      </button>
                      <input
                        class="quantity__input"
                        type="number"
                        name="quantity"
                        id="Quantity-{{ section.id }}"
                        data-cart-quantity="{{ cart_qty }}"
                        data-min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                        min="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                        {% if product.selected_or_first_available_variant.quantity_rule.max != null %}
                          data-max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                          max="{{ product.selected_or_first_available_variant.quantity_rule.max }}"
                        {% endif %}
                        step="{{ product.selected_or_first_available_variant.quantity_rule.increment }}"
                        value="{{ product.selected_or_first_available_variant.quantity_rule.min }}"
                        form="{{ product_form_id }}"
                      >
                      <button class="quantity__button" name="plus" type="button">
                        <span class="visually-hidden">
                          {{- 'products.product.quantity.increase' | t: product: product.title | escape -}}
                        </span>
                        <span class="svg-wrapper">
                          {{- 'icon-plus.svg' | inline_asset_content -}}
                        </span>
                      </button>
                    </quantity-input>
                    {%- liquid
                      assign volume_pricing_array = product.selected_or_first_available_variant.quantity_price_breaks | sort: 'quantity' | reverse
                      assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.min
                      if cart_qty > 0
                        assign current_qty_for_volume_pricing = cart_qty | plus: product.selected_or_first_available_variant.quantity_rule.increment
                      endif
                    -%}
                    {%- if product.quantity_price_breaks_configured? -%}
                      <price-per-item
                        id="Price-Per-Item-{{ section.id }}"
                        data-section-id="{{ section.id }}"
                        data-variant-id="{{ product.selected_or_first_available_variant.id }}"
                      >
                        {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                          {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                          <div class="price-per-item">
                            {%- if variant_price_compare -%}
                              <dl class="price-per-item--current">
                                <dt class="visually-hidden">
                                  {{ 'products.product.price.regular_price' | t }}
                                </dt>
                                <dd>
                                  <s class="variant-item__old-price">
                                    {{ variant_price_compare | money_with_currency }}
                                  </s>
                                </dd>
                              </dl>
                            {%- endif -%}
                            {%- if current_qty_for_volume_pricing < volume_pricing_array.last.minimum_quantity -%}
                              {%- assign variant_price = product.selected_or_first_available_variant.price
                                | money_with_currency
                              -%}
                              <span class="price-per-item--current">
                                {{- 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price -}}
                              </span>
                            {%- else -%}
                              {%- for price_break in volume_pricing_array -%}
                                {%- if current_qty_for_volume_pricing >= price_break.minimum_quantity -%}
                                  {%- assign price_break_price = price_break.price | money_with_currency -%}
                                  <span class="price-per-item--current">
                                    {{-
                                      'products.product.volume_pricing.price_at_each_html'
                                      | t: price: price_break_price
                                    -}}
                                  </span>
                                  {%- break -%}
                                {%- endif -%}
                              {%- endfor -%}
                            {%- endif -%}
                          </div>
                        {%- else -%}
                          {%- assign variant_price = product.selected_or_first_available_variant.price
                            | money_with_currency
                          -%}
                          {%- assign variant_price_compare = product.selected_or_first_available_variant.compare_at_price -%}
                          <div class="price-per-item">
                            {%- if variant_price_compare -%}
                              <dl class="price-per-item--current">
                                <dt class="visually-hidden">
                                  {{ 'products.product.price.regular_price' | t }}
                                </dt>
                                <dd>
                                  <s class="variant-item__old-price">
                                    {{ variant_price_compare | money_with_currency }}
                                  </s>
                                </dd>
                                <dt class="visually-hidden">
                                  {{ 'products.product.price.sale_price' | t }}
                                </dt>
                                <dd>
                                  <span class="price-per-item--current">
                                    {{-
                                      'products.product.volume_pricing.price_at_each_html'
                                      | t: price: variant_price
                                    -}}
                                  </span>
                                </dd>
                              </dl>
                            {%- else -%}
                              <span class="price-per-item--current">
                                {{- 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price -}}
                              </span>
                            {%- endif -%}
                          </div>
                        {%- endif -%}
                      </price-per-item>
                    {%- endif -%}
                  </div>
                  <div class="quantity__rules caption" id="Quantity-Rules-{{ section.id }}">
                    {%- if product.selected_or_first_available_variant.quantity_rule.increment > 1 -%}
                      <span class="divider">
                        {{-
                          'products.product.quantity.multiples_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.increment
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.min > 1 -%}
                      <span class="divider">
                        {{-
                          'products.product.quantity.minimum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.min
                        -}}
                      </span>
                    {%- endif -%}
                    {%- if product.selected_or_first_available_variant.quantity_rule.max != null -%}
                      <span class="divider">
                        {{-
                          'products.product.quantity.maximum_of'
                          | t: quantity: product.selected_or_first_available_variant.quantity_rule.max
                        -}}
                      </span>
                    {%- endif -%}
                  </div>
                  {%- if product.quantity_price_breaks_configured? -%}
                    <volume-pricing class="parent-display" id="Volume-{{ section.id }}">
                      {%- if product.selected_or_first_available_variant.quantity_price_breaks.size > 0 -%}
                        <span class="caption-large">{{ 'products.product.volume_pricing.title' | t }}</span>
                        <ul class="list-unstyled">
                          <li>
                            <span>{{ product.selected_or_first_available_variant.quantity_rule.min }}+</span>
                            {%- assign price = product.selected_or_first_available_variant.price
                              | money_with_currency
                            -%}
                            <span data-text="{{ 'products.product.volume_pricing.price_at_each_html' | t: price: variant_price }}">
                              {{- 'sections.quick_order_list.each' | t: money: price -}}
                            </span>
                          </li>
                          {%- for price_break in product.selected_or_first_available_variant.quantity_price_breaks -%}
                            {%- assign price_break_price = price_break.price | money_with_currency -%}
                            <li class="{%- if forloop.index >= 3 -%}show-more-item hidden{%- endif -%}">
                              <span>
                                {{- price_break.minimum_quantity -}}
                                <span aria-hidden="true">+</span></span
                              >
                              <span data-text="{{ 'products.product.volume_pricing.price_at_each_html' | t: price: price_break_price }}">
                                {{- 'sections.quick_order_list.each' | t: money: price_break_price -}}
                              </span>
                            </li>
                          {%- endfor -%}
                        </ul>
                        {%- if product.selected_or_first_available_variant.quantity_price_breaks.size >= 3 -%}
                          <show-more-button>
                            <button
                              class="button-show-more link underlined-link"
                              id="Show-More-{{ section.id }}"
                              type="button"
                            >
                              <span class="label-show-more label-text"
                                ><span aria-hidden="true">+ </span>{{ 'products.facets.show_more' | t }}
                              </span>
                            </button>
                          </show-more-button>
                        {%- endif -%}
                      {%- endif -%}
                    </volume-pricing>
                  {%- endif -%}
                </div>
              {%- when 'popup' -%}
                <modal-opener
                  class="product-popup-modal__opener quick-add-hidden"
                  data-modal="#PopupModal-{{ block.id }}"
                  {{ block.shopify_attributes }}
                >
                  <button
                    id="ProductPopup-{{ block.id }}"
                    class="product-popup-modal__button link"
                    type="button"
                    aria-haspopup="dialog"
                  >
                    {{ block.settings.text | default: block.settings.page.title | escape }}
                  </button>
                </modal-opener>
              {%- when 'share' -%}
                {% liquid
                  assign share_url = product.selected_variant.url | default: product.url | prepend: request.origin
                  render 'share-button', block: block, share_link: share_url
                %}

              {%- when 'variant_picker' -%}
                {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
              {%- when 'buy_buttons' -%}
                {%- render 'buy-buttons',
                  block: block,
                  product: product,
                  product_form_id: product_form_id,
                  section_id: section.id,
                  show_pickup_availability: true
                -%}
              {%- when 'rating' -%}
                {%- if product.metafields.reviews.rating.value != blank -%}
                  <div class="rating-wrapper">
                    {% liquid
                      assign rating_decimal = 0
                      assign decimal = product.metafields.reviews.rating.value.rating | modulo: 1
                      if decimal >= 0.3 and decimal <= 0.7
                        assign rating_decimal = 0.5
                      elsif decimal > 0.7
                        assign rating_decimal = 1
                      endif
                    %}
                    <div
                      class="rating"
                      role="img"
                      aria-label="{{ 'accessibility.star_reviews_info' | t: rating_value: product.metafields.reviews.rating.value, rating_max: product.metafields.reviews.rating.value.scale_max }}"
                    >
                      <span
                        aria-hidden="true"
                        class="rating-star"
                        style="--rating: {{ product.metafields.reviews.rating.value.rating | floor }}; --rating-max: {{ product.metafields.reviews.rating.value.scale_max }}; --rating-decimal: {{ rating_decimal }};"
                      ></span>
                    </div>
                    <p class="rating-text caption">
                      <span aria-hidden="true">
                        {{- product.metafields.reviews.rating.value }} /
                        {{ product.metafields.reviews.rating.value.scale_max -}}
                      </span>
                    </p>
                    <p class="rating-count caption">
                      <span aria-hidden="true">({{ product.metafields.reviews.rating_count }})</span>
                      <span class="visually-hidden">
                        {{- product.metafields.reviews.rating_count }}
                        {{ 'accessibility.total_reviews' | t -}}
                      </span>
                    </p>
                  </div>
                {%- endif -%}
              {%- when 'complementary' -%}
                <product-recommendations
                  class="complementary-products quick-add-hidden{% if block.settings.make_collapsible_row %} is-accordion{% endif %}{% if block.settings.enable_quick_add %} complementary-products-contains-quick-add{% endif %}"
                  data-url="{{ routes.product_recommendations_url }}?limit={{ block.settings.product_list_limit }}&intent=complementary"
                  data-section-id="{{ section.id }}"
                  data-product-id="{{ product.id }}"
                >
                  {%- if recommendations.performed and recommendations.products_count > 0 -%}
                    <aside
                      aria-label="{{ 'accessibility.complementary_products' | t }}"
                      {{ block.shopify_attributes -}}
                      {% if block.settings.make_collapsible_row %}
                        class="product__accordion accordion"
                      {% endif %}
                    >
                      <div class="complementary-products__container">
                        {%- if block.settings.make_collapsible_row -%}
                          <details id="Details-{{ block.id }}-{{ section.id }}" open>
                            <summary>
                        {%- endif %}
                        <div class="summary__title">
                          {%- if block.settings.make_collapsible_row -%}
                            {% render 'icon-accordion', icon: block.settings.icon %}
                            <h2 class="h4 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- else -%}
                            <h2 class="h3 accordion__title">{{ block.settings.block_heading }}</h2>
                          {%- endif -%}
                        </div>
                        {%- if block.settings.make_collapsible_row -%}
                          {{- 'icon-caret.svg' | inline_asset_content -}}
                          </summary>
                        {%- endif -%}
                        <slideshow-component class="slider-mobile-gutter">
                          {%- assign number_of_slides = recommendations.products_count
                            | plus: 0.0
                            | divided_by: block.settings.products_per_page
                            | ceil
                          -%}
                          <div
                            id="Slider-{{ block.id }}"
                            class="contains-card contains-card--product complementary-slider grid grid--1-col slider slider--everywhere"
                            role="list"
                            {% if number_of_slides > 1 %}
                              aria-label="{{ 'general.slider.name' | t }}"
                            {% endif %}
                          >
                            {% assign skip_card_product_styles = false %}
                            {%- for i in (1..number_of_slides) -%}
                              <div
                                id="Slide-{{ block.id }}-{{ forloop.index }}"
                                class="complementary-slide complementary-slide--{{ settings.card_style }} grid__item slider__slide slideshow__slide"
                                tabindex="-1"
                                role="group"
                                {% if number_of_slides > 1 %}
                                  aria-roledescription="{{ 'sections.slideshow.slide' | t }}"
                                  aria-label="{{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                {% endif %}
                              >
                                <ul class="list-unstyled" role="list">
                                  {%- for product in recommendations.products
                                    limit: block.settings.products_per_page
                                    offset: continue
                                  -%}
                                    <li>
                                      {%- if block.settings.enable_quick_add -%}
                                        {% assign quick_add = 'standard' %}
                                      {%- else -%}
                                        {% assign quick_add = 'none' %}
                                      {%- endif -%}
                                      {% render 'card-product',
                                        card_product: product,
                                        media_aspect_ratio: block.settings.image_ratio,
                                        show_secondary_image: false,
                                        lazy_load: false,
                                        skip_styles: skip_card_product_styles,
                                        quick_add: quick_add,
                                        section_id: section.id,
                                        horizontal_class: true,
                                        horizontal_quick_add: true
                                      %}
                                    </li>
                                    {%- assign skip_card_product_styles = true -%}
                                  {%- endfor -%}
                                </ul>
                              </div>
                            {%- endfor -%}
                          </div>
                          {%- if number_of_slides > 1 -%}
                            <div class="slider-buttons">
                              <button
                                type="button"
                                class="slider-button slider-button--prev"
                                name="previous"
                                aria-label="{{ 'general.slider.previous_slide' | t }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                              <div class="slider-counter slider-counter--{{ block.settings.pagination_style }}{% if block.settings.pagination_style == 'counter' or block.settings.pagination_style == 'numbers' %} caption{% endif %}">
                                {%- if block.settings.pagination_style == 'counter' -%}
                                  <span class="slider-counter--current">1</span>
                                  <span aria-hidden="true"> / </span>
                                  <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                                  <span class="slider-counter--total">{{ number_of_slides }}</span>
                                {%- else -%}
                                  <div class="slideshow__control-wrapper">
                                    {%- for i in (1..number_of_slides) -%}
                                      <button
                                        class="slider-counter__link slider-counter__link--{{ block.settings.pagination_style }} link"
                                        aria-label="{{ 'sections.slideshow.load_slide' | t }} {{ forloop.index }} {{ 'general.slider.of' | t }} {{ forloop.length }}"
                                        aria-controls="Slider-{{ block.id }}"
                                      >
                                        {%- if block.settings.pagination_style == 'numbers' -%}
                                          {{ forloop.index -}}
                                        {%- else -%}
                                          <span class="dot"></span>
                                        {%- endif -%}
                                      </button>
                                    {%- endfor -%}
                                  </div>
                                {%- endif -%}
                              </div>
                              <button
                                type="button"
                                class="slider-button slider-button--next"
                                name="next"
                                aria-label="{{ 'general.slider.next_slide' | t }}"
                              >
                                <span class="svg-wrapper">
                                  {{- 'icon-caret.svg' | inline_asset_content -}}
                                </span>
                              </button>
                            </div>
                          {%- endif -%}
                        </slideshow-component>
                        {%- if block.settings.make_collapsible_row -%}
                          </details>
                        {%- endif -%}
                      </div>
                    </aside>
                  {%- endif -%}
                  {{ 'component-card.css' | asset_url | stylesheet_tag }}
                  {{ 'component-complementary-products.css' | asset_url | stylesheet_tag }}
                  {%- if block.settings.enable_quick_add -%}
                    {{ 'quick-add.css' | asset_url | stylesheet_tag }}
                    <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
                  {%- endif -%}
                </product-recommendations>
              {%- when 'icon-with-text' -%}
                {% render 'icon-with-text', block: block %}
            {%- endcase -%}
          {%- endfor -%}
          <a href="{{ product.url }}" class="link product__view-details animate-arrow">
            {{ 'products.product.view_full_details' | t }}
            {{- 'icon-arrow.svg' | inline_asset_content -}}
          </a>
        </section>
      </div>
    </div>

    {% render 'product-media-modal', variant_images: variant_images %}

    {% assign popups = section.blocks | where: 'type', 'popup' %}
    {%- for block in popups -%}
      <modal-dialog id="PopupModal-{{ block.id }}" class="product-popup-modal" {{ block.shopify_attributes }}>
        <div
          role="dialog"
          aria-label="{{ block.settings.text }}"
          aria-modal="true"
          class="product-popup-modal__content"
          tabindex="-1"
        >
          <button
            id="ModalClose-{{ block.id }}"
            type="button"
            class="product-popup-modal__toggle"
            aria-label="{{ 'accessibility.close' | t }}"
          >
            {{- 'icon-close.svg' | inline_asset_content -}}
          </button>
          <div class="product-popup-modal__content-info">
            <h1 class="h2">{{ block.settings.page.title | escape }}</h1>
            {{ block.settings.page.content }}
          </div>
        </div>
      </modal-dialog>
    {%- endfor -%}

    {%- if product.media.size > 0 -%}
      <script src="{{ 'product-modal.js' | asset_url }}" defer="defer"></script>
      <script src="{{ 'media-gallery.js' | asset_url }}" defer="defer"></script>
    {%- endif -%}

    {%- if first_3d_model -%}
      <script type="application/json" id="ProductJSON-{{ product.id }}">
        {{ product.media | where: 'media_type', 'model' | json }}
      </script>
      <script src="{{ 'product-model.js' | asset_url }}" defer></script>
    {%- endif -%}

    {%- liquid
      if product.selected_or_first_available_variant.featured_media
        assign seo_media = product.selected_or_first_available_variant.featured_media
      else
        assign seo_media = product.featured_media
      endif
    -%}

    <script type="application/ld+json">
      {{ product | structured_data }}
    </script>
  </div>
</product-info>

{% schema %}
{
  "name": "t:sections.main-product.name",
  "tag": "section",
  "class": "section",
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "t:sections.main-product.blocks.text.settings.text.default",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    },
    {
      "type": "title",
      "name": "t:sections.main-product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main-product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "sku",
      "name": "t:sections.main-product.blocks.sku.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.sku.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.sku.settings.text_style.label"
        }
      ]
    },
    {
      "type": "inventory",
      "name": "t:sections.main-product.blocks.inventory.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.inventory.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.inventory.settings.text_style.label"
        },
        {
          "type": "range",
          "id": "inventory_threshold",
          "label": "t:sections.main-product.blocks.inventory.settings.inventory_threshold.label",
          "min": 0,
          "max": 100,
          "step": 1,
          "default": 10
        },
        {
          "type": "checkbox",
          "id": "show_inventory_quantity",
          "label": "t:sections.main-product.blocks.inventory.settings.show_inventory_quantity.label",
          "default": true
        }
      ]
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main-product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main-product.blocks.variant_picker.name",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "picker_type",
          "options": [
            {
              "value": "dropdown",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
            },
            {
              "value": "button",
              "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
            }
          ],
          "default": "button",
          "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
        },
        {
          "id": "swatch_shape",
          "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.label",
          "type": "select",
          "info": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.info",
          "options": [
            {
              "value": "circle",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__1.label"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__2.label"
            },
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.variant_picker.settings.swatch_shape.options__3.label"
            }
          ],
          "default": "circle"
        }
      ]
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.main-product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "metafields",
      "name": "Product Metafield",
      "settings": [
        {
          "type": "text",
          "id": "metafield_namespace",
          "label": "Metafield Namespace",
          "info": "Enter the namespace of the metafield (e.g., 'custom' or 'my_fields')"
        },
        {
          "type": "text",
          "id": "metafield_key",
          "label": "Metafield Key",
          "info": "Enter the key of the metafield (e.g., 'material' or 'care_instructions')"
        },
        {
          "type": "text",
          "id": "label",
          "label": "Display Label",
          "info": "Optional: Enter a custom label to display (e.g., 'Material', 'Care Instructions')"
        },
        {
          "type": "checkbox",
          "id": "show_label",
          "label": "Show Label",
          "default": true
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "Body"
            },
            {
              "value": "subtitle",
              "label": "Subtitle"
            },
            {
              "value": "uppercase",
              "label": "Uppercase"
            }
          ],
          "default": "body",
          "label": "Text Style"
        }
      ]
    },
    {
      "type": "all_metafields",
      "name": "All Product Metafields",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "label": "Section Heading",
          "default": "Th√¥ng s·ªë k·ªπ thu·∫≠t"
        }
      ]
    },
    {
      "type": "share",
      "name": "t:sections.main-product.blocks.share.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "share_label",
          "label": "t:sections.main-product.blocks.share.settings.text.label",
          "default": "t:sections.main-product.blocks.share.settings.text.default"
        }
      ]
    },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "collapsible_tab",
      "name": "t:sections.main-product.blocks.collapsible_tab.name",
      "settings": [
        {
          "type": "text",
          "id": "heading",
          "default": "t:sections.main-product.blocks.collapsible_tab.settings.heading.default",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.heading.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "check_mark",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.content.label"
        },
        {
          "type": "page",
          "id": "page",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.page.label"
        }
      ]
    },
    {
      "type": "popup",
      "name": "t:sections.main-product.blocks.popup.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "t:sections.main-product.blocks.popup.settings.link_label.default",
          "label": "t:sections.main-product.blocks.popup.settings.link_label.label"
        },
        {
          "id": "page",
          "type": "page",
          "label": "t:sections.main-product.blocks.popup.settings.page.label"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.main-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "complementary",
      "name": "t:sections.main-product.blocks.complementary_products.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.main-product.blocks.complementary_products.settings.paragraph.content"
        },
        {
          "type": "text",
          "id": "block_heading",
          "default": "t:sections.main-product.blocks.complementary_products.settings.heading.default",
          "label": "t:sections.main-product.blocks.complementary_products.settings.heading.label"
        },
        {
          "type": "checkbox",
          "id": "make_collapsible_row",
          "default": false,
          "label": "t:sections.main-product.blocks.complementary_products.settings.make_collapsible_row.label"
        },
        {
          "type": "select",
          "id": "icon",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "price_tag",
          "info": "t:sections.main-product.blocks.complementary_products.settings.icon.info",
          "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.label"
        },
        {
          "type": "range",
          "id": "product_list_limit",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 10,
          "label": "t:sections.main-product.blocks.complementary_products.settings.product_list_limit.label"
        },
        {
          "type": "range",
          "id": "products_per_page",
          "min": 1,
          "max": 4,
          "step": 1,
          "default": 3,
          "label": "t:sections.main-product.blocks.complementary_products.settings.products_per_page.label"
        },
        {
          "type": "select",
          "id": "pagination_style",
          "options": [
            {
              "value": "dots",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_1"
            },
            {
              "value": "counter",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_2"
            },
            {
              "value": "numbers",
              "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.options.option_3"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.pagination_style.label",
          "default": "counter"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.complementary_products.settings.product_card.heading"
        },
        {
          "type": "select",
          "id": "image_ratio",
          "options": [
            {
              "value": "portrait",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_1"
            },
            {
              "value": "square",
              "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.options.option_2"
            }
          ],
          "label": "t:sections.main-product.blocks.complementary_products.settings.image_ratio.label",
          "default": "square"
        },
        {
          "type": "checkbox",
          "id": "enable_quick_add",
          "label": "t:sections.main-product.blocks.complementary_products.settings.enable_quick_add.label",
          "default": false
        }
      ]
    },
    {
      "type": "icon-with-text",
      "name": "t:sections.main-product.blocks.icon_with_text.name",
      "settings": [
        {
          "type": "select",
          "id": "layout",
          "options": [
            {
              "value": "horizontal",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__1.label"
            },
            {
              "value": "vertical",
              "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.options__2.label"
            }
          ],
          "default": "horizontal",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.layout.label"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.pairing_1.info"
        },
        {
          "type": "select",
          "id": "icon_1",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "heart",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_1.label"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_1.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_1",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_1.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_2.label"
        },
        {
          "type": "select",
          "id": "icon_2",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "return",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_2.label"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_2.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_2",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_2.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        },
        {
          "type": "header",
          "content": "t:sections.main-product.blocks.icon_with_text.settings.pairing_3.label"
        },
        {
          "type": "select",
          "id": "icon_3",
          "options": [
            {
              "value": "none",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__1.label"
            },
            {
              "value": "apple",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__2.label"
            },
            {
              "value": "banana",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__3.label"
            },
            {
              "value": "bottle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__4.label"
            },
            {
              "value": "box",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__5.label"
            },
            {
              "value": "carrot",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__6.label"
            },
            {
              "value": "chat_bubble",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__7.label"
            },
            {
              "value": "check_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__8.label"
            },
            {
              "value": "clipboard",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__9.label"
            },
            {
              "value": "dairy",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__10.label"
            },
            {
              "value": "dairy_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__11.label"
            },
            {
              "value": "dryer",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__12.label"
            },
            {
              "value": "eye",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__13.label"
            },
            {
              "value": "fire",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__14.label"
            },
            {
              "value": "gluten_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__15.label"
            },
            {
              "value": "heart",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__16.label"
            },
            {
              "value": "iron",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__17.label"
            },
            {
              "value": "leaf",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__18.label"
            },
            {
              "value": "leather",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__19.label"
            },
            {
              "value": "lightning_bolt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__20.label"
            },
            {
              "value": "lipstick",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__21.label"
            },
            {
              "value": "lock",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__22.label"
            },
            {
              "value": "map_pin",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__23.label"
            },
            {
              "value": "nut_free",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__24.label"
            },
            {
              "value": "pants",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__25.label"
            },
            {
              "value": "paw_print",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__26.label"
            },
            {
              "value": "pepper",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__27.label"
            },
            {
              "value": "perfume",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__28.label"
            },
            {
              "value": "plane",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__29.label"
            },
            {
              "value": "plant",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__30.label"
            },
            {
              "value": "price_tag",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__31.label"
            },
            {
              "value": "question_mark",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__32.label"
            },
            {
              "value": "recycle",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__33.label"
            },
            {
              "value": "return",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__34.label"
            },
            {
              "value": "ruler",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__35.label"
            },
            {
              "value": "serving_dish",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__36.label"
            },
            {
              "value": "shirt",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__37.label"
            },
            {
              "value": "shoe",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__38.label"
            },
            {
              "value": "silhouette",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__39.label"
            },
            {
              "value": "snowflake",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__40.label"
            },
            {
              "value": "star",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__41.label"
            },
            {
              "value": "stopwatch",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__42.label"
            },
            {
              "value": "truck",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__43.label"
            },
            {
              "value": "washing",
              "label": "t:sections.main-product.blocks.collapsible_tab.settings.icon.options__44.label"
            }
          ],
          "default": "truck",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.icon_3.label"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.image_3.label"
        },
        {
          "type": "inline_richtext",
          "id": "heading_3",
          "default": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.default",
          "label": "t:sections.main-product.blocks.icon_with_text.settings.heading_3.label",
          "info": "t:sections.main-product.blocks.icon_with_text.settings.heading.info"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_sticky_info",
      "default": true,
      "label": "t:sections.main-product.settings.enable_sticky_info.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-product.settings.header.content"
    },
    {
      "type": "select",
      "id": "media_size",
      "options": [
        {
          "value": "small",
          "label": "t:sections.main-product.settings.media_size.options__1.label"
        },
        {
          "value": "medium",
          "label": "t:sections.main-product.settings.media_size.options__2.label"
        },
        {
          "value": "large",
          "label": "t:sections.main-product.settings.media_size.options__3.label"
        }
      ],
      "default": "large",
      "label": "t:sections.main-product.settings.media_size.label"
    },
    {
      "type": "checkbox",
      "id": "constrain_to_viewport",
      "default": true,
      "label": "t:sections.main-product.settings.constrain_to_viewport.label"
    },
    {
      "type": "select",
      "id": "media_fit",
      "options": [
        {
          "value": "contain",
          "label": "t:sections.main-product.settings.media_fit.options__1.label"
        },
        {
          "value": "cover",
          "label": "t:sections.main-product.settings.media_fit.options__2.label"
        }
      ],
      "default": "contain",
      "label": "t:sections.main-product.settings.media_fit.label"
    },
    {
      "type": "select",
      "id": "gallery_layout",
      "options": [
        {
          "value": "stacked",
          "label": "t:sections.main-product.settings.gallery_layout.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.gallery_layout.options__2.label"
        },
        {
          "value": "thumbnail",
          "label": "t:sections.main-product.settings.gallery_layout.options__3.label"
        },
        {
          "value": "thumbnail_slider",
          "label": "t:sections.main-product.settings.gallery_layout.options__4.label"
        }
      ],
      "default": "stacked",
      "label": "t:sections.main-product.settings.gallery_layout.label"
    },
    {
      "type": "select",
      "id": "mobile_thumbnails",
      "options": [
        {
          "value": "columns",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__1.label"
        },
        {
          "value": "show",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__2.label"
        },
        {
          "value": "hide",
          "label": "t:sections.main-product.settings.mobile_thumbnails.options__3.label"
        }
      ],
      "default": "hide",
      "label": "t:sections.main-product.settings.mobile_thumbnails.label"
    },
    {
      "type": "select",
      "id": "media_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.main-product.settings.media_position.options__1.label"
        },
        {
          "value": "right",
          "label": "t:sections.main-product.settings.media_position.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.main-product.settings.media_position.label"
    },
    {
      "type": "select",
      "id": "image_zoom",
      "options": [
        {
          "value": "lightbox",
          "label": "t:sections.main-product.settings.image_zoom.options__1.label"
        },
        {
          "value": "hover",
          "label": "t:sections.main-product.settings.image_zoom.options__2.label"
        },
        {
          "value": "none",
          "label": "t:sections.main-product.settings.image_zoom.options__3.label"
        }
      ],
      "default": "lightbox",
      "label": "t:sections.main-product.settings.image_zoom.label"
    },
    {
      "type": "checkbox",
      "id": "hide_variants",
      "default": false,
      "label": "t:sections.main-product.settings.hide_variants.label"
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "default": false,
      "label": "t:sections.main-product.settings.enable_video_looping.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}


